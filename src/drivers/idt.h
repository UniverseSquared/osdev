#ifndef _IDT_H_
#define _IDT_H_
#include <lib/stdint.h>
#include <lib/string.h>

typedef struct idt_entry {
    uint16_t base_low;
    uint16_t selector;
    uint8_t reserved;
    uint8_t flags;
    uint16_t base_high;
} __attribute__((packed)) idt_entry_t;

typedef struct idt {
    uint16_t size;
    uint32_t address;
} __attribute__((packed)) idt_t;

void init_idt(void);
idt_entry_t encode_idt_entry(uint32_t base, uint16_t selector, uint8_t flags);

extern void flush_idt(uint32_t address);

#define DECLARE_ISR_HANDLER(n) extern void isr##n(void)
#define DECLARE_IRQ_HANDLER(n) extern void irq##n(void)

DECLARE_ISR_HANDLER(0);
DECLARE_ISR_HANDLER(1);
DECLARE_ISR_HANDLER(2);
DECLARE_ISR_HANDLER(3);
DECLARE_ISR_HANDLER(4);
DECLARE_ISR_HANDLER(5);
DECLARE_ISR_HANDLER(6);
DECLARE_ISR_HANDLER(7);
DECLARE_ISR_HANDLER(8);
DECLARE_ISR_HANDLER(9);
DECLARE_ISR_HANDLER(10);
DECLARE_ISR_HANDLER(11);
DECLARE_ISR_HANDLER(12);
DECLARE_ISR_HANDLER(13);
DECLARE_ISR_HANDLER(14);
DECLARE_ISR_HANDLER(15);
DECLARE_ISR_HANDLER(16);
DECLARE_ISR_HANDLER(17);
DECLARE_ISR_HANDLER(18);
DECLARE_ISR_HANDLER(19);
DECLARE_ISR_HANDLER(20);
DECLARE_ISR_HANDLER(21);
DECLARE_ISR_HANDLER(22);
DECLARE_ISR_HANDLER(23);
DECLARE_ISR_HANDLER(24);
DECLARE_ISR_HANDLER(25);
DECLARE_ISR_HANDLER(26);
DECLARE_ISR_HANDLER(27);
DECLARE_ISR_HANDLER(28);
DECLARE_ISR_HANDLER(29);
DECLARE_ISR_HANDLER(30);
DECLARE_ISR_HANDLER(31);

DECLARE_IRQ_HANDLER(0);
DECLARE_IRQ_HANDLER(1);
DECLARE_IRQ_HANDLER(2);
DECLARE_IRQ_HANDLER(3);
DECLARE_IRQ_HANDLER(4);
DECLARE_IRQ_HANDLER(5);
DECLARE_IRQ_HANDLER(6);
DECLARE_IRQ_HANDLER(7);
DECLARE_IRQ_HANDLER(8);
DECLARE_IRQ_HANDLER(9);
DECLARE_IRQ_HANDLER(10);
DECLARE_IRQ_HANDLER(11);
DECLARE_IRQ_HANDLER(12);
DECLARE_IRQ_HANDLER(13);
DECLARE_IRQ_HANDLER(14);
DECLARE_IRQ_HANDLER(15);

#undef DECLARE_IRQ_HANDLER
#undef DECLARE_ISR_HANDLER

#endif
